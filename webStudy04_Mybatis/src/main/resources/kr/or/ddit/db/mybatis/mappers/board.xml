<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.or.ddit.board.dao.IBoardDAO">

	<sql id="selectBoardFrag">
		SELECT
		    BO_NO,   BO_WRITER,   BO_PASS,   BO_IP,
		    BO_MAIL,   BO_TITLE,   BO_CONTENT,   BO_DATE,
		    BO_HIT,   BO_RCMD
		FROM
		    BOARD
	</sql>

	<sql id="searchFrag">
		<where>
			<if test="@org.apache.commons.lang3.StringUtils@isNotBlank(searchWord)">
				<if test="searchType.equals('writer')" >
					BO_WRITER LIKE '%'||#{searchWord}||'%'
				</if>
				<if test="searchType.equals('title')">
					BO_TITLE like '%'||#{searchWord}||'%'
				</if>
				<if test="searchType.equals('content')">
					BO_CONTENT LIKE '%'||#{searchWord}||'%'
				</if>
				<if test="searchType.equals('all')">
					BO_WRITER LIKE '%'||#{searchWord}||'%'
					OR
					bo_title LIKE '%'||#{searchWord}||'%'
					OR
					BO_CONTENT LIKE '%'||#{searchWord}||'%'
				</if>
			</if>
		</where>
	</sql>

	<select id="selectBoardList" resultType="boardVO" parameterType="pagingVO">
      SELECT B.*
         FROM( SELECT ROWNUM AS RNUM, A.*
                  FROM ( SELECT BO_NO, LEVEL BO_LEVEL,
                  			LPAD('Re:',(LEVEL-1)*3, ' ')||BO_TITLE BO_TITLE, 
								BO_WRITER, BO_DATE,
								BO_HIT, BO_RCMD
                            FROM BOARD
               <include refid="kr.or.ddit.board.dao.IBoardDAO.searchFrag"/>      
		              		START WITH BO_PARENT IS NULL
							CONNECT BY PRIOR BO_NO = BO_PARENT
							ORDER SIBLINGS BY BO_NO DESC
                            ) A ) B
           WHERE RNUM BETWEEN #{startRow} AND #{endRow}
	</select>
  	
  	<select id="selectTotalRecord" resultType="long"
		parameterType="pagingVO">
		select count(*) from board
		<include refid="kr.or.ddit.board.dao.IBoardDAO.searchFrag" />
	</select>
	
	<resultMap type="boardVO" id="boardMap" autoMapping="true">
		<id property="bo_no" column="BOARD_NO"/>
		
		<collection property="pdsList" ofType="pdsVO" autoMapping="true"></collection>
	</resultMap>
	
	<select id="selectBoard" parameterType="long" resultMap="boardMap" >
		SELECT
		    BOARD.BO_NO BOARD_NO, BO_WRITER, BO_PASS, BO_IP,
		    BO_MAIL, BO_TITLE, BO_CONTENT, BO_DATE,
		    BO_HIT, BO_RCMD, PDS_NO, PDS_SAVENAME, PDS_FILENAME, PDS_SIZE, PDS_FANCYSIZE, PDS_MIME
		FROM  BOARD LEFT OUTER JOIN PDS ON(BOARD.BO_NO = PDS.BO_NO)
	    WHERE BOARD.BO_NO = #{bo_no}
	</select>	
	
	<insert id="insertBoard" parameterType="boardVO">
	<selectKey order="BEFORE" keyProperty="bo_no"
			resultType="Long">
			SELECT BOARD_SEQ.NEXTVAL FROM DUAL
			<!-- SELECT NVL(MAX(REP_NO),0)+1 FROM BOARD -->
		</selectKey>
		INSERT INTO BOARD (
		    BO_NO, BO_WRITER, BO_PASS,
		    BO_IP, BO_MAIL, BO_TITLE,
		    BO_CONTENT, BO_DATE
		    <if test="bo_parent > 0" >
		   		, BO_PARENT
		    </if>
		) VALUES (
		    #{bo_no}, #{bo_writer}, #{bo_pass},
		    #{bo_ip}, #{bo_mail}, #{bo_title}, #{bo_content},
		    sysdate
		    <if test="bo_parent > 0" >
		    	, #{bo_parent, jdbcType=NUMERIC}
		    </if>
		)
	</insert>
	
	<update id="updateBoard" parameterType="boardVO">
		UPDATE BOARD
			<set>
				<if test="@org.apache.commons.lang3.StringUtils@isNotBlank(bo_mail)">
					BO_MAIL 	= #{bo_mail},
				</if>
				<if test="@org.apache.commons.lang3.StringUtils@isNotBlank(bo_title)">
					BO_TITLE 	= #{bo_title},
				</if>
				<if test="@org.apache.commons.lang3.StringUtils@isNotBlank(bo_content)">
					BO_CONTENT 	= #{bo_content}
				</if>
			</set>
		WHERE
		BO_NO =#{bo_no}
	</update>
	
	<delete id="deleteBoard" parameterType="long">
		DELETE FROM BOARD 
			WHERE BO_NO IN(
		    SELECT BO_NO
		    FROM BOARD
		    START WITH BO_NO = #{bo_no}
		    CONNECT BY PRIOR BO_NO = BO_PARENT
			)
	</delete>
	
	<update id="incrementRcmd" parameterType="long">
		UPDATE BOARD 
		SET
		BO_RCMD=BO_RCMD+1
		WHERE BO_NO=#{bo_no}
	</update>
	
	<update id="incrementHit" parameterType="long">
		UPDATE BOARD
		SET
		BO_HIT = BO_HIT+1
		WHERE BO_NO=#{bo_no}
	</update>
</mapper>